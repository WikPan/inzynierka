version: "3.9"

services:
  db:
    image: postgres:16
    container_name: inzynierka-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: inzynierka
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: inzynierka-backend
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - backend_node_modules:/app/node_modules
    environment:
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_USER: postgres
      DATABASE_PASSWORD: postgres
      DATABASE_NAME: inzynierka
    command: npm run start:dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: inzynierka-frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app:cached
      - frontend_node_modules:/app/node_modules
    stdin_open: true
    tty: true
    command: npm run dev -- --host 0.0.0.0

volumes:
  pgdata:
  backend_node_modules:
  frontend_node_modules:
